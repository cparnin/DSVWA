## Semgrep Findings

- **Found 'subprocess' function 'check_output' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.** in `dsvw.py:39`
  - ðŸ’¡ *No API key, unable to suggest fix.*
- **The application might dynamically evaluate untrusted input, which can lead to a code injection vulnerability. An attacker can execute arbitrary code, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing code containing user input. If this is unavoidable, validate and sanitize the input, and use safe alternatives for evaluating user input.** in `dsvw.py:57`
  - ðŸ’¡ *No API key, unable to suggest fix.*
- **Detected a Jinja2 environment without autoescaping. Jinja2 does not autoescape by default. This is dangerous if you are rendering to a browser because this allows for cross-site scripting (XSS) attacks. If you are in a web context, enable autoescaping by setting 'autoescape=True.' You may also consider using 'jinja2.select_autoescape()' to only enable automatic escaping for certain file extensions.** in `scanner/report.py:5`
  - ðŸ’¡ *No API key, unable to suggest fix.*

## Gitleaks Findings

_No issues found._
